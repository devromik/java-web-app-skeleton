<?xml version="1.0" encoding="UTF-8"?>
<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>net.devromik</groupId>
    <artifactId>app</artifactId>
    <version>1.0</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>

        <!-- ***** General-purpose libraries. ***** -->

        <commons-lang3.version>3.4</commons-lang3.version>
        <joda-time-version>2.7</joda-time-version>
        <guava.version>18.0</guava.version>
        <jackson-databind.version>2.5.3</jackson-databind.version>
        <jackson-datatype-joda.version>2.5.4</jackson-datatype-joda.version>

        <!-- ***** Logging. ***** -->

        <slf4j-api.version>1.7.12</slf4j-api.version>
        <slf4j-utils.version>1.0</slf4j-utils.version>
        <janino.version>2.5.10</janino.version>
        <logback.version>1.1.3</logback.version>

        <!-- ***** Testing. ***** -->

        <junit.version>4.12</junit.version>
        <mockito-all.version>1.10.19</mockito-all.version>

        <!-- ***** Spring. ***** -->

        <spring.version>4.1.6.RELEASE</spring.version>

        <!-- ***** Jetty. ***** -->

        <jetty.version>9.2.10.v20150310</jetty.version>

        <!-- ***** Maven. ***** -->

        <build-helper-maven-plugin.version>1.9.1</build-helper-maven-plugin.version>
        <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>2.18.1</maven-failsafe-plugin.version>
        <maven-assembly-plugin.version>2.5.4</maven-assembly-plugin.version>

        <!-- ***** Static analysis. ***** -->

        <sonar-maven-plugin.version>2.6</sonar-maven-plugin.version>
        <jacoco-maven-plugin.version>0.7.4.201502262128</jacoco-maven-plugin.version>
    </properties>

    <dependencies>
        <!-- ***** General-purpose libraries. ***** -->

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda-time-version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-databind.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
            <version>${jackson-datatype-joda.version}</version>
        </dependency>

        <!-- ***** Logging. ***** -->

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-api.version}</version>
        </dependency>

        <dependency>
            <groupId>net.devromik</groupId>
            <artifactId>slf4j-utils</artifactId>
            <version>${slf4j-utils.version}</version>
        </dependency>

        <!-- Needed for Logback. -->
        <dependency>
            <groupId>janino</groupId>
            <artifactId>janino</artifactId>
            <version>${janino.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-access</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j-api.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${slf4j-api.version}</version>
        </dependency>

        <!-- ***** Testing. ***** -->

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito-all.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- ***** Spring. ***** -->

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>

            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- ***** Jetty. ***** -->

        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
            <version>${jetty.version}</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>

            <resource>
                <directory>src/func-test/resources</directory>
            </resource>

            <resource>
                <directory>src/main/webapp</directory>
                <targetPath>webapp</targetPath>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>

                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${maven-assembly-plugin.version}</version>

                <executions>
                    <execution>
                        <phase>package</phase>

                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <finalName>${project.artifactId}</finalName>

                    <descriptors>
                        <descriptor>src/distr/assembly.xml</descriptor>
                    </descriptors>

                    <appendAssemblyId>false</appendAssemblyId>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- A profile for development:
                - build,
                - unit tests. -->
        <profile>
            <id>dev</id>

            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <properties>
                <maven-dependency-plugin.version>2.10</maven-dependency-plugin.version>
                <!-- This value is used only during a local build.
                     A build server should substitute an actual build number. -->
                <build.number>dev build</build.number>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven-surefire-plugin.version}</version>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- A profile for full-scale testing:
                 - build,
                 - unit tests,
                 - functional tests. -->
        <profile>
            <id>full-scale-test</id>

            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>${build-helper-maven-plugin.version}</version>

                        <executions>
                            <execution>
                                <id>add-test-source</id>

                                <configuration>
                                    <sources>
                                        <source>src/func-test/java</source>
                                    </sources>
                                </configuration>

                                <phase>generate-test-sources</phase>

                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${maven-failsafe-plugin.version}</version>

                        <configuration>
                            <encoding>${project.build.sourceEncoding}</encoding>
                        </configuration>

                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- A profile for performing static analysis on the central (public for a company or a team) SonarQube.
             You have to define the following environment variables before using this profile:
                 - CENTRAL_SONAR_JDBC_URL,
                 - CENTRAL_SONAR_JDBC_USER_NAME,
                 - CENTRAL_SONAR_JDBC_PASSWORD,
                 - CENTRAL_SONAR_JDBC_DRIVER. -->
        <profile>
            <id>central-static-analysis</id>

            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>

            <properties>
                <sonar.jdbc.url>${env.CENTRAL_SONAR_JDBC_URL}</sonar.jdbc.url>
                <sonar.jdbc.username>${env.CENTRAL_SONAR_JDBC_USER_NAME}</sonar.jdbc.username>
                <sonar.jdbc.password>${env.CENTRAL_SONAR_JDBC_PASSWORD}</sonar.jdbc.password>
                <sonar.jdbc.driver>${env.CENTRAL_SONAR_JDBC_DRIVER}</sonar.jdbc.driver>
                <sonar.scm.disabled>true</sonar.scm.disabled>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                        <version>${sonar-maven-plugin.version}</version>
                    </plugin>

                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco-maven-plugin.version}</version>

                        <executions>
                            <execution>
                                <id>default-prepare-agent</id>

                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>

                            <execution>
                                <id>default-report</id>
                                <phase>prepare-package</phase>

                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>

                            <execution>
                                <id>default-check</id>

                                <configuration>
                                    <rules/>
                                </configuration>

                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- A profile for performing static analysis on the local (your private) SonarQube.
             You have to define the following environment variables before using this profile:
                 - LOCAL_SONAR_JDBC_URL,
                 - LOCAL_SONAR_JDBC_USER_NAME,
                 - LOCAL_SONAR_JDBC_PASSWORD,
                 - LOCAL_SONAR_JDBC_DRIVER. -->
        <profile>
            <id>local-static-analysis</id>

            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>

            <properties>
                <sonar.jdbc.url>${env.LOCAL_SONAR_JDBC_URL}</sonar.jdbc.url>
                <sonar.jdbc.username>${env.LOCAL_SONAR_JDBC_USER_NAME}</sonar.jdbc.username>
                <sonar.jdbc.password>${env.LOCAL_SONAR_JDBC_PASSWORD}</sonar.jdbc.password>
                <sonar.jdbc.driver>${env.LOCAL_SONAR_JDBC_DRIVER}</sonar.jdbc.driver>
                <sonar.scm.disabled>true</sonar.scm.disabled>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                        <version>${sonar-maven-plugin.version}</version>
                    </plugin>

                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco-maven-plugin.version}</version>

                        <executions>
                            <execution>
                                <id>default-prepare-agent</id>

                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>

                            <execution>
                                <id>default-report</id>
                                <phase>prepare-package</phase>

                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>

                            <execution>
                                <id>default-check</id>

                                <configuration>
                                    <rules/>
                                </configuration>

                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>